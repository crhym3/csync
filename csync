#!/bin/sh

# Define/initialize environment variables. 
OPTIND=1         # Reset in case getopts has been used previously in the shell.
HELP="
help data goes here
"
op=""
dir_or_file=""
src=""
dest=""
verbose=0
delete=

# Make sure we know the user's home directory.
if [ "$HOME" = "" ]
then
    echo "HOME environment variable not defined"
    echo -e $HELP
    exit 0
fi

# Make sure the user has defined a bucket for use with this command.
if [ "$CSYNC_BUCKET" = "" ]
then
    echo "CSYNC_BUCKET environment variable not defined"
    echo -e $HELP
    exit 0
fi

# Parse options.
while getopts "dh?v" opt; do
    case "$opt" in
    h|\?)
        echo -e $HELP
        exit 0
        ;;
    v)  verbose=1
        ;;
    d)  delete=-d
        ;;
    esac
done

# Skip to op and dir-or-file args.
shift $((OPTIND-1))
[ "$1" = "--" ] && shift

# Set local dir-or-file and expanded dir-or-file (absolute path to dir-or-file).
if [ "$2" != "" ]
then
    if [[ $2 = */\./*  ||  $2 = \.  || $2 = */\.\./* || $2 = \.\. ]]
    then
        echo "Dot (.) and double dot (..) not allowed in dir-or-file argument."
        exit 0
    fi
    dir_or_file=$2
    if [[ "$2" = /* ]]
    then
        expanded_dir_or_file=$2
    else
        expanded_dir_or_file=`pwd`/$2
    fi
else
    dir_or_file="."
    expanded_dir_or_file=`pwd`
fi

# If local dir or file is under homedir, make it relative. Otherwise, keep it absolute.
cloud_path=""
case $expanded_dir_or_file in
  $HOME*) cloud_path=${CSYNC_BUCKET}/HOME${expanded_dir_or_file#$HOME};
          local_path=$dir_or_file
          ;;
  *) cloud_path=${CSYNC_BUCKET}$dir_or_file
     local_path=$dir_or_file
     ;;
esac

if [ "$1" = "push" ]
then
    op="push"
    src=$local_path
    dest=$cloud_path
    shift
elif [ "$1" = "pull" ]
then
    src=$cloud_path
    dest=$local_path
    op="pull"
    shift
else
    echo "No operation (push or pull) specified."
    echo -e $HELP
    exit 0
fi

cmd="gsutil -m rsync -r $delete $src $dest"
if [ "$verbose" = "1" ]
then
    echo $cmd
fi

#$cmd
